---
type Props = {
  class?: string;
  en?: string;
};
const { en, class: className } = Astro.props;
---

<h2 class={`c-section_title_primary js-anim_elm ${className && className}`}>
  <div class="c-section_title_primary__motif">
    <img src="/img/common/title_parts.png" alt="" />
  </div>
  {en && <div class="en js-split_wrap">{en}</div>}
  <slot />
</h2>

<style lang="scss">
  .c-section_title_primary {
    $root: &;
    margin-block-end: res_px_max(40px, 60px);
    text-align: center;
    display: flex;
    flex-direction: column;
    color: var(--color-main-80);
    font-weight: 700;
    &.-white {
      color: var(--color-white-00);
    }
    &.js-anim_elm {
      #{$root}__motif {
        scale: 0;
        transition: all 0.3s var(--ease-out-back);
        transform-origin: center center;
      }
      :global(.c-split) {
        display: inline-block;
        translate: 0 20px;
        opacity: 0;
        transition: all 0.5s var(--ease-in-out-back) 0.3s;
        @for $i from 0 through 10 {
          &:nth-child(#{$i}) {
            transition-delay: #{$i * 80 + 300}ms;
          }
        }
      }
      :global(.jp) {
        opacity: 0;
        translate: 0 20px;
        transition: all 0.4s ease 0.6s;
      }
      &.is-act {
        #{$root}__motif {
          scale: 1;
        }
        :global(.c-split) {
          translate: 0;
          opacity: 1;
        }
        :global(.jp) {
          opacity: 1;
          translate: 0 0;
        }
      }
    }
    &__motif {
      inline-size: res_px_max(14px, 15px);
      aspect-ratio: 1;
      margin-inline: auto;
      margin-block-end: res_px_max(8px, 16px);
      line-height: 1;
    }
    :global(.en) {
      font-family: var(--font-en);
      font-size: res_rem_max(45px, 63px);
      letter-spacing: 0.1em;
      text-transform: uppercase;
      line-height: 1;
    }
    :global(.jp) {
      font-size: res_rem_max(15px, 20px);
    }
  }
</style>
