@use './variable' as *;
@use './function' as *;

@mixin media_retina() {
  @media only screen and (max-width: 3840px) and (min-width: 320px) and (min-device-pixel-ratio: 1.5),
    (-o-min-device-pixel-ratio: 1.5),
    (-webkit-min-device-pixel-ratio: 1.5),
    (min-device-pixel-ratio: 1.5) {
    @content;
  }
}

@mixin mq-max {
  @media only screen and (max-width: $screen-max) {
    @content;
  }
}

@mixin mq-md {
  @media only screen and (max-width: $screen-md) {
    @content;
  }
}

@mixin mq-tab {
  @media only screen and (max-width: $screen-tab) {
    @content;
  }
}

@mixin mq-sp {
  @media only screen and (max-width: $screen-sp) {
    @content;
  }
}

@mixin mq-spmin {
  @media only screen and (max-width: $screen-spmin) {
    @content;
  }
}

@mixin mq-min {
  @media only screen and (max-width: $screen-min) {
    @content;
  }
}

@mixin mq-landscape {
  @media only screen and (orientation: landscape) {
    @content;
  }
}

@mixin mq-portrait {
  @media only screen and (orientation: portrait) {
    @content;
  }
}

@mixin mq($max-width) {
  @media only screen and (max-width: $max-width) {
    @content;
  }
}

@mixin hover {
  @media (any-hover: hover) {
    @content;
  }
}

@mixin hover-none {
  @media (any-hover: none) {
    @content;
  }
}

@mixin font-jost($weight: 500) {
  font-weight: $weight;
  font-family: var(--font-en);
}

@mixin aco($color: --color-black-100, $bg: --color-gray-30, $size: 36px) {
  position: relative;
  display: block;
  border-radius: 100vmax;
  aspect-ratio: 1 / 1;
  inline-size: res_px_max(36px, $size);
  background-color: var($bg);
  transition: background-color var(--dur);
  &::before,
  &::after {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    inline-size: res_px_max(12px, 12px);
    block-size: 2px;
    translate: -50% -50%;
    background-color: var($color);
    transition: rotate var(--dur), background-color var(--dur), opacity var(--dur);
  }
  &::after {
    rotate: -90deg;
  }
  .is-open & {
    &::before {
      rotate: 180deg;
    }
    &::after {
      rotate: 0deg;
    }
  }
}

@mixin skew-obj($color1: --color-main-blue-100, $color2: --color-main-green-100) {
  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 0.45em;
    left: res_px_max(2px, 5px);
    display: inline-block;
    inline-size: res_rem_max(3px, 5px);
    block-size: 0.8em;
    display: inline-block;
    aspect-ratio: 1 / 3;
    transform: skewX(-20deg);
  }
  &::before {
    background: var($color1);
  }
  &::after {
    left: res_px_max(8px, 15px);
    background: var($color2);
  }
}

@mixin pic-bg($radius-min: 14px, $radius-max: 24px) {
  &::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    inline-size: 100%;
    block-size: 100%;
    border-radius: res_px_max($radius-min, $radius-max);
    background: var(--current-color);
    z-index: 1;
    rotate: 4deg;
  }
  :global(img) {
    position: relative;
    z-index: 11;
  }
}

@mixin color-shadow() {
  &::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    inline-size: 60%;
    block-size: 60%;
    background: radial-gradient(var(--current-color), transparent);
    opacity: 0.8;
    filter: blur(10px);
    translate: -50% 50%;
    z-index: 1;
  }
}
